@model IEnumerable<csharp_diary.Models.Diary>
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@{
    ViewData["Title"] = "Index";
}
<div class="d-flex flex-column justify-content-center">
    @if (SignInManager.IsSignedIn(User))
    {
        <p> Hello @User.Identity?.Name!</p>
    }
    <h1 class="text-center">Your Diary</h1>
    <p>This is your diary, when creating a new entry, write down what you're feeling</p>
</div>


<div id="diaryEntryContainer" class="d-flex flex-wrap justify-content-center">
    @foreach (var item in Model)
    {
        <div class="card m-2" style="width 18rem;">
            <div class="card-header" style="width auto">
                <h2>@Html.DisplayFor(modelItem => item.EntryTitle)</h2>
                <h5>@Html.DisplayFor(modelItem => item.EntryDate)</h5>
            </div>
            <div class="card-body">
                <p>
                    @Html.DisplayFor(modelItem => item.EntiryDesc)
                </p>
            </div>
            <div class="d-flex" style="justify-content: space-evenly;">
                <a class="btn btn-primary" asp-action="Edit" asp-route-id="@item.ID">Edit</a>
                <a class="btn btn-primary" asp-action="Details" asp-route-id="@item.ID">Details</a>
                <a class="btn btn-primary" asp-action="Delete" asp-route-id="@item.ID">Delete</a>
            </div>
        </div>
    }
</div>
<p class="d-flex justify-content-center">
    <a class="btn btn-primary" asp-action="Create">Create New</a>
</p>